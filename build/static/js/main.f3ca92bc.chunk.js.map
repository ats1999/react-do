{"version":3,"sources":["../node_modules/latex.js/dist/documentclasses lazy /^/.//.*$/ groupOptions: {} namespace object","../node_modules/latex.js/dist/packages lazy /^/.//.*$/ groupOptions: {} namespace object","../node_modules/latex.js/dist lazy groupOptions: {} namespace object","Md.jsx","editor-light.jsx","editor-dark.jsx","editor-all-dark.jsx","editor-all-light.jsx","editor-wyswyg.jsx","viewer-dark.jsx","viewer-light.jsx","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Editor","E","Viewer","V","EditorLight","theme","EditorDark","EditorDarkAll","initialValue","EditorLightAll","initialEditType","ViewerDark","useEffect","el","document","body","style","backgroundColor","md","ViewerLight","links","Nav","map","link","to","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qHAAA,SAASA,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,I,iBCZ9B,SAASX,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,I,iBCZ9B,SAASX,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,I,wICQjBC,EAASC,IACTC,EAASC,I,OCnBP,SAASC,IACtB,OAAO,cAACJ,EAAD,CAAQK,MAAM,UCDR,SAASC,IACtB,OAAO,cAACN,EAAD,ICDM,SAASO,IACtB,OACE,cAACP,EAAD,CACEQ,aAAY,0kFCHH,SAASC,IACtB,OACE,cAACT,EAAD,CACEK,MAAM,QACNG,aAAY,0kFCJH,SAASJ,IACtB,OAAO,cAACJ,EAAD,CAAQK,MAAM,QAAQK,gBAAgB,WCDhC,SAASC,IAStB,OARAC,qBAAU,WACR,IAAMC,EAAKC,SAASC,KAGpB,OAFAF,EAAGG,MAAMC,gBAAkB,UAEpB,WACLJ,EAAGG,MAAMC,gBAAkB,WAE5B,IAED,cAACf,EAAD,CACEgB,GAAE,yvHCXO,SAASC,IACtB,OACE,cAACjB,EAAD,CACEG,MAAM,QACNa,GAAE,yvH,UCYFE,EAAQ,CACZ,CAAC,eAAe,gBAAgB,cAAChB,EAAD,KAChC,CAAC,cAAc,eAAe,cAACE,EAAD,KAC9B,CAAC,kBAAkB,mBAAmB,cAACC,EAAD,KACtC,CAAC,mBAAmB,oBAAoB,cAACE,EAAD,KACxC,CAAC,gBAAgB,iBAAiB,cAAC,EAAD,KAClC,CAAC,cAAc,eAAe,cAACE,EAAD,KAC9B,CAAC,eAAe,gBAAgB,cAACQ,EAAD,MAG5BE,EAAI,WACR,OAAO,6BACJD,EAAME,KAAI,SAAAC,GACT,OAAO,6BACL,cAAC,IAAD,CAAMC,GAAID,EAAK,GAAf,SACGA,EAAK,MAFMA,EAAK,UASZ,SAASE,IACvB,OAAO,cAAC,IAAD,UACL,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEDP,EAAME,KAAI,SAAAC,GAAI,OAAE,cAAC,IAAD,CAAqBG,KAAMH,EAAK,GAAhC,SACdA,EAAK,IADqBA,EAAK,YC9CvC,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.f3ca92bc.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 79;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 80;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 81;","import React from \"react\";\n// import \"@toast-ui/editor/dist/toastui-editor.css\";\n// import \"@toast-ui/editor/dist/theme/toastui-editor-dark.css\";\n// import \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\n// import \"tui-color-picker/dist/tui-color-picker.css\";\n// import \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\n// import \"@toast-ui/chart/dist/toastui-chart.css\";\n// import \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\n// import \"@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css\";\n\n// // theme\n// //https://github.com/PrismJS/prism-themes/tree/master/themes\n// import \"prismjs/themes/prism-okaidia.css\";\n// import \"katex/dist/katex.min.css\";\n// import \"mde10/dist/toast.css\";\n// import \"mdv10/dist/toast.css\";\n\nimport E from \"mde10\";\nimport V from \"mdv10\";\n\nexport const Editor = E;\nexport const Viewer = V;","import { Editor } from \"./Md\";\n\nexport default function EditorLight() {\n  return <Editor theme=\"light\" />;\n}\n","import { Editor } from \"./Md\";\n\nexport default function EditorDark() {\n  return <Editor />;\n}\n","import { Editor } from \"./Md\";\n\nexport default function EditorDarkAll() {\n  return (\n    <Editor\n      initialValue={`\n# Hello, i am [Rahul](https://ats1999.github.io)\n> Features of this editor\n## Heading support\n# - h1\n## - h2\n...\n###### - h6\n## Text type\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n## Text Color\n<span style=\"color: red\">Red</span> , <span style=\"color: white\">White</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n## Block Quote\n> Hi, this is block quote\n## Lists\n### Unordered List\n* a\n* b\n    * c\n        * d\n            * e\n### Ordered List\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n## Task List\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n## Table\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n## Image\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n## Link\n[Rahul Portfolio](ats1999.github.io)\n## Inline code highlighting\n\\`inline highlight\\`\n## Code Block Highlight\n\\`\\`\\`js\n***language-name\n// code\n***\n// supported language\n// html,css, java, c++(cpp), python, jsx, javascript,c\n\\`\\`\\`\n\\`\\`\\`html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Page Title</title>\n    </head>\n    <body>\n        <h1>This is a Heading</h1>\n        <p>This is a paragraph.</p>\n    </body>\n</html>\n\\`\\`\\`\n\\`\\`\\`css\n/* css */\nbody {\n  background-color: lightblue;\n}\nh1 {\n  color: white;\n  text-align: center;\n}\np {\n  font-family: verdana;\n  font-size: 20px;\n}\n\\`\\`\\`\n\\`\\`\\`c\n// c\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"Hello World!\";\n  return 0;\n}\n\\`\\`\\`\n\\`\\`\\`python\n// python\nimport numpy as np\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\nprint(type(arr))\n\\`\\`\\`\n\\`\\`\\`jsx\n// jsx\n<ReactChild>\n  <Hi>\n    <p style={{\n      color:\"red\",\n      padding:10\n    }}>This is the text</p>\n  </Hi>\n</ReactChild>\n\\`\\`\\`\n\\`\\`\\`js\n// js - javascript\nfunction findMax() {\n  let max = -Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] > max) {\n      max = arguments[i];\n    }\n  }\n  return max;\n}\n\\`\\`\\`\n## Math  Typecasting\n### inline math - ([katex-supported](https://katex.org/docs/supported.html))\nThis is mass enery relation -> $e=mc^2$\n### Using [katex](https://katex.org/docs/supported.html)\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n### Using [latex](https://www.overleaf.com/learn)\n$$latex\n\\\\[ x^n + y^n = z^n \\\\]\n$$\n# Thanku\n`}\n    />\n  );\n}\n","import { Editor } from \"./Md\";\n\nexport default function EditorLightAll() {\n  return (\n    <Editor\n      theme=\"light\"\n      initialValue={`\n# Hello, i am [Rahul](https://ats1999.github.io)\n> Features of this editor\n## Heading support\n# - h1\n## - h2\n...\n###### - h6\n## Text type\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n## Text Color\n<span style=\"color: red\">Red</span> , <span style=\"color: black\">Black</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n## Block Quote\n> Hi, this is block quote\n## Lists\n### Unordered List\n* a\n* b\n    * c\n        * d\n            * e\n### Ordered List\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n## Task List\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n## Table\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n## Image\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n## Link\n[Rahul Portfolio](ats1999.github.io)\n## Inline code highlighting\n\\`inline highlight\\`\n## Code Block Highlight\n\\`\\`\\`js\n***language-name\n// code\n***\n// supported language\n// html,css, java, c++(cpp), python, jsx, javascript,c\n\\`\\`\\`\n\\`\\`\\`html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Page Title</title>\n    </head>\n    <body>\n        <h1>This is a Heading</h1>\n        <p>This is a paragraph.</p>\n    </body>\n</html>\n\\`\\`\\`\n\\`\\`\\`css\n/* css */\nbody {\n  background-color: lightblue;\n}\nh1 {\n  color: white;\n  text-align: center;\n}\np {\n  font-family: verdana;\n  font-size: 20px;\n}\n\\`\\`\\`\n\\`\\`\\`c\n// c\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"Hello World!\";\n  return 0;\n}\n\\`\\`\\`\n\\`\\`\\`python\n// python\nimport numpy as np\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\nprint(type(arr))\n\\`\\`\\`\n\\`\\`\\`jsx\n// jsx\n<ReactChild>\n  <Hi>\n    <p style={{\n      color:\"red\",\n      padding:10\n    }}>This is the text</p>\n  </Hi>\n</ReactChild>\n\\`\\`\\`\n\\`\\`\\`js\n// js - javascript\nfunction findMax() {\n  let max = -Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] > max) {\n      max = arguments[i];\n    }\n  }\n  return max;\n}\n\\`\\`\\`\n## Math  Typecasting\n### inline math - ([katex-supported](https://katex.org/docs/supported.html))\nThis is mass enery relation -> $e=mc^2$\n### Using [katex](https://katex.org/docs/supported.html)\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n### Using [latex](https://www.overleaf.com/learn)\n$$latex\n\\\\[ x^n + y^n = z^n \\\\]\n$$\n# Thanku\n`}\n    />\n  );\n}\n","import { Editor } from \"./Md\";\n\nexport default function EditorLight() {\n  return <Editor theme=\"light\" initialEditType=\"wyswyg\" />;\n}\n","import { Viewer } from \"./Md\";\nimport { useEffect } from \"react\";\nexport default function ViewerDark() {\n  useEffect(() => {\n    const el = document.body;\n    el.style.backgroundColor = \"#121212\";\n\n    return () => {\n      el.style.backgroundColor = \"white\";\n    };\n  }, []);\n  return (\n    <Viewer\n      md={`\n# Hello, i am [Rahul](https://ats1999.github.io)\n> Features of this editor\n## Heading support\n\\`\\`\\`js\n# - h1\n## - h2\n...\n###### - h6\n\\`\\`\\`\n## Text type\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n\\`\\`\\`js\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n\\`\\`\\`\n## Text Color\n<span style=\"color: red\">Red</span> , <span style=\"color: white\">White</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n\\`\\`\\`html\n<span style=\"color: red\">Red</span> , <span style=\"color: white\">White</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n\\`\\`\\`\n## Block Quote\n> Hi, this is block quote\n\\`\\`\\`js\n> Hi, this is block quote\n\\`\\`\\`\n## Lists\n### Unordered List\n* a\n* b\n    * c\n        * d\n            * e\n\\`\\`\\`js\n* a\n* b\n    * c\n        * d\n            * e\n\\`\\`\\`\n### Ordered List\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n\\`\\`\\`js\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n\\`\\`\\`\n## Task List\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n\\`\\`\\`js\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n\\`\\`\\`\n## Table\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n\\`\\`\\`js\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n\\`\\`\\`\n## Image\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n\\`\\`\\`js\n// syntax : [alt](url)\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n\\`\\`\\`\n## Link\n[Rahul Portfolio](ats1999.github.io)\n\\`\\`\\`js\n[Rahul Portfolio](ats1999.github.io)\n\\`\\`\\`\n## Inline code highlighting\n\\`inline highlight\\`\n\\`\\`\\`js\n\\`inline highlight\\`\n\\`\\`\\`\n## Code Block Highlight\nSyntax\n> Replace * with \\`\n\\`\\`\\`js\n***language-name\n// code\n***\n// supported language\n// html,css, java, c++(cpp), python, jsx, javascript,c\n\\`\\`\\`\n\\`\\`\\`html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Page Title</title>\n    </head>\n    <body>\n        <h1>This is a Heading</h1>\n        <p>This is a paragraph.</p>\n    </body>\n</html>\n\\`\\`\\`\n\\`\\`\\`css\n/* css */\nbody {\n  background-color: lightblue;\n}\nh1 {\n  color: white;\n  text-align: center;\n}\np {\n  font-family: verdana;\n  font-size: 20px;\n}\n\\`\\`\\`\n\\`\\`\\`c\n// c\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"Hello World!\";\n  return 0;\n}\n\\`\\`\\`\n\\`\\`\\`python\n// python\nimport numpy as np\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\nprint(type(arr))\n\\`\\`\\`\n\\`\\`\\`jsx\n// jsx\n<ReactChild>\n  <Hi>\n    <p style={{\n      color:\"red\",\n      padding:10\n    }}>This is the text</p>\n  </Hi>\n</ReactChild>\n\\`\\`\\`\n\\`\\`\\`js\n// js - javascript\nfunction findMax() {\n  let max = -Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] > max) {\n      max = arguments[i];\n    }\n  }\n  return max;\n}\n\\`\\`\\`\n## Math  Typecasting\n### inline math - ([katex-supported](https://katex.org/docs/supported.html))\nThis is mass enery relation -> $e=mc^2$\n\\`\\`\\`\nThis is mass enery relation -> $e=mc^2$\n\\`\\`\\`\n### Using [katex](https://katex.org/docs/supported.html)\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n\\`\\`\\`\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n\\`\\`\\`\n### Using [latex](https://www.overleaf.com/learn)\n$$latex\n\\\\[ x^n + y^n = z^n \\\\]\n$$\n\\`\\`\\`\n\\\\[ x^n + y^n = z^n \\\\]\n\\`\\`\\`\n# Thanku\n`}\n    />\n  );\n}\n","import { Viewer } from \"./Md\";\n\nexport default function ViewerLight() {\n  return (\n    <Viewer\n      theme=\"light\"\n      md={`\n# Hello, i am [Rahul](https://ats1999.github.io)\n> Features of this editor\n## Heading support\n\\`\\`\\`js\n# - h1\n## - h2\n...\n###### - h6\n\\`\\`\\`\n## Text type\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n\\`\\`\\`js\n**Bold**, *italic*, ***bold italic***, ~~stricked~~\n\\`\\`\\`\n## Text Color\n<span style=\"color: red\">Red</span> , <span style=\"color: black\">Black</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n\\`\\`\\`html\n<span style=\"color: red\">Red</span> , <span style=\"color: black\">Black</span>, <span style=\"color: yellow\">Yellow</span>, <span style=\"color: #00ff09\">custom</span>\n\\`\\`\\`\n## Block Quote\n> Hi, this is block quote\n\\`\\`\\`js\n> Hi, this is block quote\n\\`\\`\\`\n## Lists\n### Unordered List\n* a\n* b\n    * c\n        * d\n            * e\n\\`\\`\\`js\n* a\n* b\n    * c\n        * d\n            * e\n\\`\\`\\`\n### Ordered List\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n\\`\\`\\`js\n1. a\n2. b\n    1. c\n        1. d\n            1. e\n\\`\\`\\`\n## Task List\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n\\`\\`\\`js\n* [ ] task1\n* [x] task2\n* [x] task3\n* [ ] task4\n\\`\\`\\`\n## Table\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n\\`\\`\\`js\n| heading-1 | heading-2 |\n| --- | --- |\n| data-1 | data-2 |\n\\`\\`\\`\n## Image\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n\\`\\`\\`js\n// syntax : [alt](url)\n![Rahul](https://res.cloudinary.com/practicaldev/image/fetch/s--nh8zSFgY--/c_fill,f_auto,fl_progressive,h_320,q_auto,w_320/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/285604/94170c66-2590-4002-90e0-ec4dc94ed7b5.png)\n\\`\\`\\`\n## Link\n[Rahul Portfolio](ats1999.github.io)\n\\`\\`\\`js\n[Rahul Portfolio](ats1999.github.io)\n\\`\\`\\`\n## Inline code highlighting\n\\`inline highlight\\`\n\\`\\`\\`js\n\\`inline highlight\\`\n\\`\\`\\`\n## Code Block Highlight\nSyntax\n> Replace * with \\`\n\\`\\`\\`js\n***language-name\n// code\n***\n// supported language\n// html,css, java, c++(cpp), python, jsx, javascript,c\n\\`\\`\\`\n\\`\\`\\`html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Page Title</title>\n    </head>\n    <body>\n        <h1>This is a Heading</h1>\n        <p>This is a paragraph.</p>\n    </body>\n</html>\n\\`\\`\\`\n\\`\\`\\`css\n/* css */\nbody {\n  background-color: lightblue;\n}\nh1 {\n  color: white;\n  text-align: center;\n}\np {\n  font-family: verdana;\n  font-size: 20px;\n}\n\\`\\`\\`\n\\`\\`\\`c\n// c\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"Hello World!\";\n  return 0;\n}\n\\`\\`\\`\n\\`\\`\\`python\n// python\nimport numpy as np\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\nprint(type(arr))\n\\`\\`\\`\n\\`\\`\\`jsx\n// jsx\n<ReactChild>\n  <Hi>\n    <p style={{\n      color:\"red\",\n      padding:10\n    }}>This is the text</p>\n  </Hi>\n</ReactChild>\n\\`\\`\\`\n\\`\\`\\`js\n// js - javascript\nfunction findMax() {\n  let max = -Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] > max) {\n      max = arguments[i];\n    }\n  }\n  return max;\n}\n\\`\\`\\`\n## Math  Typecasting\n### inline math - ([katex-supported](https://katex.org/docs/supported.html))\nThis is mass enery relation -> $e=mc^2$\n\\`\\`\\`\nThis is mass enery relation -> $e=mc^2$\n\\`\\`\\`\n### Using [katex](https://katex.org/docs/supported.html)\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n\\`\\`\\`\n$$katex\n\\\\def\\\\arraystretch{1.5}\n   \\\\begin{array}{c:c:c}\n   a & b & c \\\\\\\\ \\\\hline\n   d & e & f \\\\\\\\\n   \\\\hdashline\n   g & h & i\n\\\\end{array}\n$$\n\\`\\`\\`\n### Using [latex](https://www.overleaf.com/learn)\n$$latex\n\\\\[ x^n + y^n = z^n \\\\]\n$$\n\\`\\`\\`\n\\\\[ x^n + y^n = z^n \\\\]\n\\`\\`\\`\n# Thanku\n`}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport EditorLight from \"./editor-light\";\nimport EditorDark from \"./editor-dark\";\nimport EditorDarkAll from \"./editor-all-dark\";\nimport EditorLightAll from \"./editor-all-light\";\nimport EditorWYSWYG from \"./editor-wyswyg\";\nimport ViewerDark from \"./viewer-dark\";\nimport ViewerLight from \"./viewer-light\";\n\nimport \"./App.css\";\n\nconst links = [\n  [\"Editor light\",\"/editor-light\",<EditorLight/>],\n  [\"Editor dark\",\"/editor-dark\",<EditorDark/>],\n  [\"Editor dark all\",\"/editor-dark-all\",<EditorDarkAll/>],\n  [\"Editor light all\",\"/editor-light-all\",<EditorLightAll/>],\n  [\"Editor WYSWYG\",\"/editor-wyswyg\",<EditorWYSWYG/>],\n  [\"Viewer dark\",\"/viewer-dark\",<ViewerDark/>],\n  [\"Viewer light\",\"/viewer-light\",<ViewerLight/>]\n]\n\nconst Nav=()=>{\n  return <ul>\n    {links.map(link=>{\n      return <li key={link[0]}>\n        <Link to={link[1]}>\n          {link[0]}\n        </Link>\n      </li>\n    })}\n  </ul>\n}\n\nexport default function App() {\n return <Router>\n   <Switch>\n     <Route path=\"/\" exact>\n       <Nav/>\n     </Route>\n     {links.map(link=><Route key={link[0]} path={link[1]}>\n       {link[2]}\n     </Route>)}\n   </Switch>\n </Router>\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}